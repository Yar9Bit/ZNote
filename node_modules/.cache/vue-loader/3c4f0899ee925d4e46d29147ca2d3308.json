{"remainingRequest":"D:\\PyCharm\\znote-web-develop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\PyCharm\\znote-web-develop\\src\\components\\Notes\\NotesListItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\PyCharm\\znote-web-develop\\src\\components\\Notes\\NotesListItem.vue","mtime":1656771209000},{"path":"D:\\PyCharm\\znote-web-develop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656775819133},{"path":"D:\\PyCharm\\znote-web-develop\\node_modules\\babel-loader\\lib\\index.js","mtime":1656775823227},{"path":"D:\\PyCharm\\znote-web-develop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656775819133},{"path":"D:\\PyCharm\\znote-web-develop\\node_modules\\vue-loader\\lib\\index.js","mtime":1656775824514}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7Z2V0fSBmcm9tICJAL2JhY2tlbmQiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJOb3Rlc0xpc3RJdGVtIiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbm90ZXNMaXN0OiB1bmRlZmluZWQsCiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5mZXRjaE5vdGVzKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBmZXRjaE5vdGVzKCkgewogICAgICBnZXQoJ25vdGVzJykudGhlbihkID0+IHRoaXMubm90ZXNMaXN0ID0gZCk7CiAgICB9LAogICAgb25Sb3dTZWxlY3RlZChyb3dzKSB7CiAgICAgIHRoaXMuJGVtaXQoJ3NlbGVjdGVkJywgcm93cy5sZW5ndGggPyByb3dzWzBdLmlkIDogdW5kZWZpbmVkKTsKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["NotesListItem.vue"],"names":[],"mappings":";;;;;;;;AAQA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NotesListItem.vue","sourceRoot":"src/components/Notes","sourcesContent":["<template>\n  <div>\n    <b-table :items=\"notesList\" :fields=\"['subject']\" sort-by=\"id\" selectable select-mode=\"single\"\n             @row-selected=\"onRowSelected\"></b-table>\n  </div>\n</template>\n\n<script>\nimport {get} from \"@/backend\";\n\nexport default {\n  name: \"NotesListItem\",\n  data() {\n    return {\n      notesList: undefined,\n    }\n  },\n  mounted() {\n    this.fetchNotes();\n  },\n  methods: {\n    fetchNotes() {\n      get('notes').then(d => this.notesList = d);\n    },\n    onRowSelected(rows) {\n      this.$emit('selected', rows.length ? rows[0].id : undefined);\n    },\n  },\n}\n</script>\n\n<style scoped>\n</style>"]}]}